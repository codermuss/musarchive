// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: onboarding.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const deleteOnboarding = `-- name: DeleteOnboarding :exec
DELETE FROM onboarding 
WHERE id = $1
`

func (q *Queries) DeleteOnboarding(ctx context.Context, id int32) error {
	_, err := q.db.Exec(ctx, deleteOnboarding, id)
	return err
}

const getOnboarding = `-- name: GetOnboarding :one
SELECT id, image, title, description 
FROM onboarding
WHERE id = $1
`

func (q *Queries) GetOnboarding(ctx context.Context, id int32) (Onboarding, error) {
	row := q.db.QueryRow(ctx, getOnboarding, id)
	var i Onboarding
	err := row.Scan(
		&i.ID,
		&i.Image,
		&i.Title,
		&i.Description,
	)
	return i, err
}

const insertOnboarding = `-- name: InsertOnboarding :one
INSERT INTO onboarding (image, title, description) 
VALUES ($1, $2, $3) 
RETURNING id, image, title, description
`

type InsertOnboardingParams struct {
	Image       pgtype.Text `json:"image"`
	Title       string      `json:"title"`
	Description string      `json:"description"`
}

func (q *Queries) InsertOnboarding(ctx context.Context, arg InsertOnboardingParams) (Onboarding, error) {
	row := q.db.QueryRow(ctx, insertOnboarding, arg.Image, arg.Title, arg.Description)
	var i Onboarding
	err := row.Scan(
		&i.ID,
		&i.Image,
		&i.Title,
		&i.Description,
	)
	return i, err
}

const updateOnboarding = `-- name: UpdateOnboarding :one
UPDATE onboarding
SET image = $1, title = $2, description = $3
WHERE id = $4
RETURNING id, image, title, description
`

type UpdateOnboardingParams struct {
	Image       pgtype.Text `json:"image"`
	Title       string      `json:"title"`
	Description string      `json:"description"`
	ID          int32       `json:"id"`
}

func (q *Queries) UpdateOnboarding(ctx context.Context, arg UpdateOnboardingParams) (Onboarding, error) {
	row := q.db.QueryRow(ctx, updateOnboarding,
		arg.Image,
		arg.Title,
		arg.Description,
		arg.ID,
	)
	var i Onboarding
	err := row.Scan(
		&i.ID,
		&i.Image,
		&i.Title,
		&i.Description,
	)
	return i, err
}
