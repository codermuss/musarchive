CREATE TABLE "onboarding" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "image" varchar,
  "title" varchar NOT NULL,
  "description" text NOT NULL
);

CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar(50) UNIQUE NOT NULL,
  "password" varchar NOT NULL,
  "full_name" varchar NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "avatar" varchar,
  "role" varchar(20) NOT NULL DEFAULT 'standard',
  "birth_date" date NOT NULL DEFAULT '0001-01-01',
  "password_changed_at" timestamptz NOT NULL DEFAULT '0001-01-01 00:00:00Z',
  "created_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "categories" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50) UNIQUE NOT NULL
);

CREATE TABLE "blogs" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "title" varchar(255) NOT NULL,
  "summary" text NOT NULL,
  "content" text NOT NULL,
  "cover_image" varchar(255),
  "created_at" timestamptz DEFAULT (now()),
  "updated_at" timestamptz DEFAULT (now()),
  "likes" int DEFAULT 0
);

CREATE TABLE "tags" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50) UNIQUE NOT NULL
);

CREATE TABLE "blog_tags" (
  "blog_id" int NOT NULL,
  "tag_id" int NOT NULL,
  PRIMARY KEY ("blog_id", "tag_id")
);

CREATE TABLE "blog_categories" (
  "blog_id" int NOT NULL,
  "category_id" int NOT NULL,
  PRIMARY KEY ("blog_id", "category_id")
);

CREATE TABLE "featured_stories" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "blog_id" int NOT NULL,
  "featured_date" date DEFAULT (current_date)
);

CREATE TABLE "profiles" (
  "user_id" int PRIMARY KEY,
  "bio" text,
  "blog_count" int DEFAULT 0,
  "like_count" int DEFAULT 0,
  "follower_count" int DEFAULT 0
);

CREATE TABLE "user_posts" (
  "user_id" int NOT NULL,
  "blog_id" int NOT NULL,
  PRIMARY KEY ("user_id", "blog_id")
);

CREATE TABLE "user_followers" (
  "user_id" int NOT NULL,
  "follower_id" int NOT NULL,
  PRIMARY KEY ("user_id", "follower_id")
);

CREATE TABLE "comments" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "blog_id" int NOT NULL,
  "user_id" int NOT NULL,
  "content" text NOT NULL,
  "created_at" timestamptz DEFAULT (now())
);

CREATE TABLE "blog_likes" (
  "blog_id" int NOT NULL,
  "user_id" int NOT NULL,
  PRIMARY KEY ("blog_id", "user_id")
);

CREATE TABLE "sessions" (
  "id" uuid PRIMARY KEY,
  "user_id" int NOT NULL,
  "refresh_token" varchar NOT NULL,
  "user_agent" varchar NOT NULL,
  "client_ip" varchar NOT NULL,
  "is_blocked" boolean NOT NULL DEFAULT false,
  "expires_at" timestamptz NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now())
);

ALTER TABLE "blogs" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "blog_tags" ADD FOREIGN KEY ("blog_id") REFERENCES "blogs" ("id");

ALTER TABLE "blog_tags" ADD FOREIGN KEY ("tag_id") REFERENCES "tags" ("id");

ALTER TABLE "blog_categories" ADD FOREIGN KEY ("blog_id") REFERENCES "blogs" ("id");

ALTER TABLE "blog_categories" ADD FOREIGN KEY ("category_id") REFERENCES "categories" ("id");

ALTER TABLE "featured_stories" ADD FOREIGN KEY ("blog_id") REFERENCES "blogs" ("id");

ALTER TABLE "profiles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_posts" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_posts" ADD FOREIGN KEY ("blog_id") REFERENCES "blogs" ("id");

ALTER TABLE "user_followers" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_followers" ADD FOREIGN KEY ("follower_id") REFERENCES "users" ("id");

ALTER TABLE "comments" ADD FOREIGN KEY ("blog_id") REFERENCES "blogs" ("id");

ALTER TABLE "comments" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "blog_likes" ADD FOREIGN KEY ("blog_id") REFERENCES "blogs" ("id");

ALTER TABLE "blog_likes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "sessions" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");
